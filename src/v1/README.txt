	배경

* 사이트 구조가 명확하지는 않았다.

- 8개 mainCategory, 18개 subCategory
- 소분류 된 프로젝트들에도 필터를 적용할 수 있지만 프로젝트마다 부여된 키워드로 라벨링하는 것 뿐으로 예상(!)됨.
- 각각의 세부 카테고리는 category_id가 존재, url에서 이를 활용한다.
- 세부 카테고리는 무한로딩(200페이지 까지)되며 'Load more' 버튼으로 시작, 스크롤이 바닥쯤에 닿으면 다음 요소들이 추가로(ajax) 로딩된다. 페이지 이동은 일어나지 않는다.
- 12개 프로젝트 / 1페이지.





	어플리케이션 목적과 필요성

- 18개 subCategory마다 존재하는 고유 uri을 동적으로 얻어내기
- 위 uri들이 바뀔 수 있기 때문(url은 몰라도 queryString의 구성이 바뀔 수 있다고 예상)






	결과와 이유

- 18개 subCategory의 default url은 확보. 그러나 1~200페이지를 순회할 수 있는 본격적인(?) uri는 확보하지 못함.
- 사람이 직접 브라우저를 구동시켜보면 'Load more'버튼을 누르면서 동시에 2페이지가 로딩되고, 그와 동시에 default url에서 재사용 가능한 완전한 uri로 바뀐다. 그러나 puppeteer로 접속하고 해당 element를 클릭 해도 이와같은 이벤트들이 일어나지 않는다.
